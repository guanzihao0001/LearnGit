{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"facedeetect.py","provenance":[],"authorship_tag":"ABX9TyPQ+bO75e8yCX1m8h8HCHl4"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"vmT79PVvOALt","colab":{"base_uri":"https://localhost:8080/","height":368},"executionInfo":{"status":"error","timestamp":1612195367108,"user_tz":-60,"elapsed":1051,"user":{"displayName":"Zihao Guan","photoUrl":"","userId":"07770799287110677933"}},"outputId":"49f2303a-8ad0-423c-a482-c0149cef04e6"},"source":["from __future__ import print_function\n","\n","import numpy as np\n","import cv2 as cv\n","\n","# local modules\n","from video import create_capture\n","from common import clock, draw_str\n","\n","\n","def detect(img, cascade):\n","    rects = cascade.detectMultiScale(img, scaleFactor=1.3, minNeighbors=4, minSize=(30, 30),\n","                                     flags=cv.CASCADE_SCALE_IMAGE)\n","    if len(rects) == 0:\n","        return []\n","    rects[:,2:] += rects[:,:2]\n","    return rects\n","\n","def draw_rects(img, rects, color):\n","    for x1, y1, x2, y2 in rects:\n","        cv.rectangle(img, (x1, y1), (x2, y2), color, 2)\n","\n","def main():\n","    import sys, getopt\n","\n","    args, video_src = getopt.getopt(sys.argv[1:], '', ['cascade=', 'nested-cascade='])\n","    try:\n","        video_src = video_src[0]\n","    except:\n","        video_src = 0\n","    args = dict(args)\n","    cascade_fn = args.get('--cascade', \"data/haarcascades/haarcascade_frontalface_alt.xml\")\n","    nested_fn  = args.get('--nested-cascade', \"data/haarcascades/haarcascade_eye.xml\")\n","\n","    cascade = cv.CascadeClassifier(cv.samples.findFile(cascade_fn))\n","    nested = cv.CascadeClassifier(cv.samples.findFile(nested_fn))\n","\n","    cam = create_capture(video_src, fallback='synth:bg={}:noise=0.05'.format(cv.samples.findFile('samples/data/lena.jpg')))\n","\n","    while True:\n","        _ret, img = cam.read()\n","        gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n","        gray = cv.equalizeHist(gray)\n","\n","        t = clock()\n","        rects = detect(gray, cascade)\n","        vis = img.copy()\n","        draw_rects(vis, rects, (0, 255, 0))\n","        if not nested.empty():\n","            for x1, y1, x2, y2 in rects:\n","                roi = gray[y1:y2, x1:x2]\n","                vis_roi = vis[y1:y2, x1:x2]\n","                subrects = detect(roi.copy(), nested)\n","                draw_rects(vis_roi, subrects, (255, 0, 0))\n","        dt = clock() - t\n","\n","        draw_str(vis, (20, 20), 'time: %.1f ms' % (dt*1000))\n","        cv.imshow('facedetect', vis)\n","\n","        if cv.waitKey(5) == 27:\n","            break\n","\n","    print('Done')\n","\n","\n","if __name__ == '__main__':\n","    print(__doc__)\n","    main()\n","    cv.destroyAllWindows()"],"execution_count":11,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-8f894a7fec20>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# local modules\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mvideo\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mcreate_capture\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mcommon\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mclock\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdraw_str\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'video'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]}]}